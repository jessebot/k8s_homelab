---
# logging config for the smol-k8s-lab CLI
log:
  # path of file to log to if console logging is NOT desired
  # file: "./smol-k8s-log.log"
  # logging level, Options: debug, info, warn, error
  level: "info"

# which distros of Kubernetes to deploy. Options: kind, k3s, k0s
# NOTE: only kind is available on macOS at this time
k8s_distros:
  - kind


k3s:
  # if k8s_distribution set to k3s, you can add an array of extra
  # arguments to pass to the k3s install script
  extra_args: []


# store your password and tokens directly in your local password manager
local_password_manager:
  # To use Bitwarden, you must export the following environment variables:
  # BW_PASSWORD, BW_CLIENTID, BW_CLIENTSECRET, BW_SESSION
  # If you're missing any of these, smol-k8s-lab will prompt for them
  bitwarden:
    # enable the use of bitwarden as your password manager.
    enabled: true
    overwrite: false

apps:
  # ---------------------------------------------------------------------------
  # Required Kubernetes Apps
  # ---------------------------------------------------------------------------
  # These are installed with helm or manifests depending on what is recommended
  # for your k8s distro. All become managed by ArgoCD if you enable it below
  # ---------------------------------------------------------------------------
  #
  # Use LetsEncrypt to generate TLS certs for all your apps with ingress
  cert-manager:
    argo:
      secret_keys:
        # Used for letsencrypt-staging, to generate certs
        email: ""
      # skip installing this app b/c its part of another app of apps with this
      # name. If equals "", we'll instead use the repo, path, ref, namespace
      part_of_app_of_apps: "ingress"
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "ingress/cert-manager/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "ingress"

  # deploy ingress-nginx and cert-manager as one argocd app of apps and project 
  # in the same namespace
  ingress:
    argo:
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      # change to "ingress/ingress-nginx/" to not use app of apps
      path: "ingress/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "ingress"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos:
        - https://charts.jetstack.io
        - "https://kubernetes.github.io/ingress-nginx"
        - "https://jessebot.github.io/vouch-helm-chart"
        - "https://github.com/kubernetes/ingress-nginx"

  # all apps below this point are optional
  # ---------------------------------------------------------------------------
  metallb:
    # enable metallb which helps expose IP addresses for loadbalancers on metal
    # if you're on a vm or container where you can't get an IP, disable this
    # most useful on linux, but you can probably also use it on a mac ðŸ¤·
    enabled: true
    argo:
      # secret keys to make available to helm and/or ArgoCD ApplicationSets
      secret_keys:
        # metallb IPs used for DNS later (make sure they're not in use)
        # Example of required full CIDR notation
        # address_pool:
        #   - 192.168.20.23/32
        address_pool: []
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "metallb/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "metallb-system"

  # ---------------------------------------------------------------------------
  # Argo CD deployed and maintained Applications to run on Kubernetes
  # ---------------------------------------------------------------------------
  # Each of these apps is can only be deployed and maintained by Argo CD
  # ---------------------------------------------------------------------------
  #
  argo_cd:
    # Enable ArgoCD to install other apps, and also manage itself :)
    # Set to false if you you just want a bare cluster with only the above apps
    enabled: true
    argo:
      # secrets keys to make available to ArgoCD ApplicationSets
      secret_keys:
        # FQDN hostname for accessing the ArgoCD web interface
        hostname: ""
        # which oidc provider to use for argo cd: zitadel (or keycloak)
        oidc_provider: "zitadel"
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      # change to argocd/argocd to not use app of apps with secret plugin
      path: "argocd/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "argocd"

  argo_cd_appset_secret_plugin:
    # This is required if you want to use the default small-hack argo.repo and
    # default enabled if ArgoCD is enabled, so we can create a k8s Secret with
    # your more private info such as hostnames, IP addresses, and emails in a
    # deployment that run alongside ArgoCD to provide Argo CD ApplicationSets
    # This plugin has no ingress and cannot be reached from outside the cluster
    enabled: true
    argo:
      # skip installing this app b/c its part of another app of apps with this
      # name. If equals "" we'll instead use the repo, path, ref, and namespace
      part_of_app_of_apps: "argo_cd"
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "argocd/argocd_appset/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "argocd"

  external_secrets_operator:
    # enable the external secrets operator to pull remote secrets
    enabled: false
    provider: bitwarden
    argo:
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      # change to external-secrets-operator/external-secrets-operator/ to deploy
      # ONLY the external-secrets-operator, so this will not use app of apps and 
      # therefore we will not deploy the bitwarden eso provider. Use if you want to use
      # a different provider
      path: "external-secrets-operator/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "external-secrets"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos:
        - "https://charts.external-secrets.io"
        # you can remove this one if you're not using bitwarden to store your k8s secrets
        - "https://jessebot.github.io/bitwarden-eso-provider"


  bitwarden_eso_provider:
    # enable the bitwarden ESO provider to store k8s secrets in bitwarden
    enabled: false
    argo:
      # skip installing this app b/c its part of another app of apps with this
      # name. If equals "" we'll instead use the repo, path, ref, and namespace
      part_of_app_of_apps: "external_secrets_operator"
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "external-secrets-operator/bitwarden"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "external-secrets"

  infiscal:
    enabled: true
    argo:
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "infiscal/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "infiscal"

  # keycloak is an IAM provider that you can use with ArgoCD for user/group
  # management and oauth2. it also works with vouch to secure hostnames that
  # otherwise wouldn't have authentication
  keycloak:
    enabled: false
    # initialize keycloak by creating a 1st user & clients for ArgoCD and vouch
    # this will also prompt you for input for creating an admin user
    init: true
    argo:
      # secrets keys to make available to ArgoCD ApplicationSets
      secret_keys:
        hostname: ""
        mail_hostname: ""
        default_realm: "default"
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "keycloak/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "keycloak"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos:
        - "registry-1.docker.io"


  kyverno:
    # enable kyverno, for k8s native policy management
    enabled: false
    argo:
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "kyverno/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "kyvero"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos: []

  kubevirt:
    # enable kubevirt to create more virtual machines with kubernetes
    enabled: false
    argo:
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "kubevirt/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "kubevirt"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos: []

  mastodon:
    # enable mastodon for a self hosted social media website
    enabled: false
    # initialize the app by setting up new k8s secrets and/or bitwarden items
    init: true
    argo:
      # secrets keys to make available to ArgoCD ApplicationSets
      secret_keys:
        hostname: ""
        mail_hostname: ""
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "mastodon/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "social"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos:
        - "registry-1.docker.io"
        - "https://jessebot.github.io/mastodon-helm-chart"


  matrix:
    # enable matrix for a self hosted chat service
    enabled: false
    # initialize the app by setting up new k8s secrets and/or bitwarden items
    init: true
    argo:
      # secrets keys to make available to ArgoCD ApplicationSets
      secret_keys:
        hostname: ""
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "matrix/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "matrix"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos:
        - "registry-1.docker.io"
        - "https://jessebot.github.io/matrix-chart"

  nextcloud:
    # enable nextcloud to stand up a nice little self hosted file server
    enabled: false
    # initialize the app by setting up new k8s secrets and/or bitwarden items
    init: true
    argo:
      # secrets keys to make available to ArgoCD ApplicationSets
      secret_keys:
        hostname: ""
        mail_hostname: ""
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "nextcloud/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "nextcloud"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos:
        - "registry-1.docker.io"
        - "https://nextcloud.github.io/helm"

  prometheus:
    # enable full monitoring stack w/ prometheus, grafana, loki, alert manager
    enabled: false
    argo:
      # secrets keys to make available to ArgoCD ApplicationSets
      secret_keys:
        # FQDN to use for Prometheus web interface
        hostname: ""
        # FQDN to use for grafana
        grafana_hostname: ""
        # FQDN to use for Alert Manager web interface
        alert_manager_hostname: ""
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important! This
      # is an app of apps. Change to "monitoring/kube-prometheus-stack/" to
      # only install kube-prometheus-stack (foregoing loki and push gateway)
      path: "monitoring/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "monitoring"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos:
        - "registry-1.docker.io"
        - "https://prometheus-community.github.io/helm-charts"

  vouch:
    enabled: false
    init: true
    argo:
      # secrets keys to make available to ArgoCD ApplicationSets
      secret_keys:
        # FQDN to use for vouch
        hostname: ""
      # repo to install the Argo CD app from
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      path: "ingress/vouch/"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "ingress"

  # zitadel is still in alpha testing phase. Use with caution ðŸ¤·
  zitadel:
    # initial zitadel with a user and two applications for Argo CD and Vouch
    init: true
    enabled: true
    argo:
      # secrets keys to make available to ArgoCD ApplicationSets
      secret_keys:
        # FQDN to use for zitadel
        hostname: ""
        # type of database to use: postgresql or cockroachdb
        database_type: "postgresql"
      # repo to install the Argo CD app from
      # git repo to install the Argo CD app from
      repo: "https://github.com/small-hack/argocd-apps"
      # path in the argo repo to point to. Trailing slash very important!
      # if you want to use cockroachdb, change to zitadel/zitadel_and_cockroachdb
      path: "zitadel/zitadel_and_postgresql"
      # either the branch or tag to point at in the argo repo above
      ref: "main"
      # namespace to install the k8s app in
      namespace: "zitadel"
      # source repos for Argo CD App Project (in addition to argo.repo)
      project_source_repos:
        - "https://charts.zitadel.com"
        - "https://zitadel.github.io/zitadel-charts"
        - "https://charts.cockroachdb.com/"
        - "registry-1.docker.io"
